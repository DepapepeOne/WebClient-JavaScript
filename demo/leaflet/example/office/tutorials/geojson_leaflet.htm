<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>GeoJSON tutorial - Leaflet</title>
    <script include="leaflet" src="../../libs/zondyclient/include-leaflet-local.js"></script>
<style>
    #map{height:800px;}
</style>
</head>
<body>
<div id="map"></div>
<script>
    var map = L.map('map').setView([30.48791323870018,  114.4144077911377], 11);
    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=' +
        'sk.eyJ1IjoiY2hlbmdkYWRhIiwiYSI6ImNqZDFjaGo0ZjFzcnoyeG54enoxdnNuZHUifQ.hTWXXBUQ0wdGeuDF3GWeUw', {
        attribution: '<a href="#">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox.streets'
    }).addTo(map);

    var geojsonFeature = {
        "type": "Feature",
        "properties": {
            "name": "武汉",
            "popupContent": "这里是中国地质大学(武汉)!"
        },
        "geometry": {
            "type": "Point",
            "coordinates": [114.3950879573822, 30.523313470820923]
        }
    };

    L.geoJSON(geojsonFeature, {

        style: function (feature) {
            return feature.properties && feature.properties.style;
        },
        onEachFeature: onEachFeature,
        pointToLayer: function (feature, latlng) {
            return L.circleMarker(latlng, {
                radius: 20,
                fillColor: "#ff7800",
                color: "#000",
                weight: 1,
                opacity: 1,
                fillOpacity: 0.8
            });
        }
    }).addTo(map);

    var states = [{
        "type": "Feature",
        "properties": {"party": "Republican","popupContent": "这里是红色区域！"},
        "geometry": {
            "type": "Polygon",
            "coordinates": [[
                [114.2138671875, 30.57999697131928],
                [114.18777465820312, 30.535650839702168],
                [114.24407958984375, 30.519089756902343],
                [114.26536560058594, 30.56817331778523],
                [114.2138671875, 30.57999697131928]
            ]]
        }
    }, {
        "type": "Feature",
        "properties": {"party": "Democrat","popupContent": "这里是蓝色区域！"},
        "geometry": {
            "type": "Polygon",
            "coordinates": [[
                [114.11087036132811, 30.48359221971874],
                [114.17953491210938, 30.48359221971874],
                [114.17953491210938, 30.532102273884586],
                [114.11087036132811, 30.532102273884586],
                [114.11087036132811, 30.48359221971874]
            ]]
        }
    }];
    L.geoJSON(states, {
        style: function(feature) {
            switch (feature.properties.party) {
                case 'Republican': return {color: "#ff0000"};
                case 'Democrat':   return {color: "#0000ff"};
            }
        },
        onEachFeature: onEachFeature
    }).addTo(map);

    var myLines = [{
        "type": "LineString",
        "coordinates": [[114.07447814941406, 30.46643043369801],
            [114.27154541015625, 30.467614102257855],
            [114.44183349609375, 30.48359221971874]]
    }, {
        "type": "LineString",
        "coordinates": [[114.07379150390625, 30.452225289045764],
            [114.27291870117188, 30.454001045389525],
            [114.44526672363281, 30.4711650216242]]
    }];
    var myStyle = {
        "color": "#ff7800",
        "weight": 5,
        "opacity": 0.65
    };
    L.geoJSON(myLines, {style: myStyle}).addTo(map);


    function onEachFeature(feature, layer) {
        if (feature.properties && feature.properties.popupContent) {
            popupContent = feature.properties.popupContent;
        }
        layer.bindPopup(popupContent);
    }
</script>
</body>
</html>
