<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>矢量图层要素添加</title>
    <link href="../../css/leaflet/style.css" rel="stylesheet" type="text/css" />
    <script src="../../libs/zondyclient/include-leaflet-local.js"></script>
    <style>
        body {
            height: 700px;
        }
    </style>
    <script type="text/javascript">
         //使用严格模式
         "use strict";
         //定义地图和矢量图层
         var map, vectorLayer;
         /**初始化地图显示
         */
         function init() {
             //地图容器
             map = L.map('leaf_map', {
                 //地图渲染在canvas上
                 preferCanvas: true,
                 //不添加属性说明控件
                 attributionControl: false,
                 //添加缩放控件
                 zoomControl: true,
                 //投影坐标系
                 crs: L.CRS.EPSG4326,
                 //中心点
                 center: [0, 0],
                 //最大级数
                 maxZoom: 10,
                 //最小级数
                 minZoom: 0,
                 //显示级数
                 zoom: 1
             });
             //创建矢量图层       
             vectorLayer = new Zondy.Map.MapVectorLayer(["gdbp://MapGisLocal/OpenLayerVecterMap/ds/世界地图经纬度/sfcls/主要城市", "gdbp://MapGisLocal/OpenLayerVecterMap/ds/地图编辑缓存经纬度/sfcls/mypntlayer"], {
                 //投影坐标系
                 crs: L.CRS.EPSG4326,
                 //IP地址
                 ip: "develop.smaryun.com",
                 //端口号
                 port: "6163",
                 //只显示一个图层,不平铺显示
                 noWrap: true,
                 //添加guid，确保图层从IGS中加载，不读取缓存文件
                 guid: (new Date()).getTime().toString()
             }).addTo(map);
         }

         /**根据地图范围随机生成坐标点
         */
         function createPoint() {
             //获取最大纬度
             var ymax = map.getBounds()._northEast.lat;
             //获取最大经度
             var xmax = map.getBounds()._northEast.lng;
             //获取最小纬度
             var ymin = map.getBounds()._southWest.lat;
             //获取最小经度
             var xmin = map.getBounds()._southWest.lng;
             var w = xmax - xmin;
             var h = ymax - ymin;
             //在地图范围内创建一个点
             var x = Math.random() * w + xmin;
             var y = Math.random() * h + ymin;
             //返回点几何
             return new Zondy.Object.GPoint(x, y);
         }

         /**添加点要素
         */
         function addPoint() {
             //显示进度条
             startPressBar();
             //创建一个点形状，描述点形状的几何信息
             var gpoint = createPoint();
             //设置当前点要素的几何信息
             var fGeom = new Zondy.Object.FeatureGeometry({ PntGeom: [gpoint] });
             //随机输出1~8之间的整数,作为新添加的要素的颜色号
             var pntColor = Math.floor(Math.random() * 8 + 1);
             //描述点要素的符号参数信息
             var pointInfo = new Zondy.Object.CPointInfo({ Angle: 0, Color: pntColor, Space: 0, SymHeight: 10, SymID: 98, SymWidth: 10 });
             //设置当前点要素的图形参数信息
             var webGraphicInfo = new Zondy.Object.WebGraphicsInfo({ InfoType: 1, PntInfo: pointInfo });
             //设置添加点要素的属性信息
             var attValue = ['中国', '中国', 1.0];
             //创建一个要素
             var feature = new Zondy.Object.Feature({ fGeom: fGeom, GraphicInfo: webGraphicInfo, AttValue: attValue });
             //设置要素为点要素
             feature.setFType(1);
             //创建一个要素数据集
             var featureSet = new Zondy.Object.FeatureSet();
             featureSet.clear();
             //设置属性结构
             var cAttStruct = new Zondy.Object.CAttStruct({ FldName: ["Cname", "CNTRY_NAME", "POPULATION"], FldNumber: 3, FldType: ["string", "string", "double"] });
             featureSet.AttStruct = cAttStruct;
             //添加要素到要素数据集
             featureSet.addFeature(feature);
             //创建一个编辑服务类
             var editService = new Zondy.Service.EditLayerFeature("gdbp://MapGisLocal/OpenLayerVecterMap/ds/世界地图经纬度/sfcls/主要城市",
            { ip: "develop.smaryun.com", port: "6163" });
             //执行添加点要素功能,OnSuccess为回调函数
             editService.add(featureSet, OnSuccess);
         }

         /**添加点要素回调函数
         *  @param {json对象} rlt 获取结果对象
         */
         function OnSuccess(rlt) {
             //停止进度条
             stopPressBar();
             var result = rlt;
             if (result) {
                 alert("添加点要素成功！");
                 //刷新图层
                 vectorLayer.redraw();
             } else {
                 alert("添加点要素失败！");
             }
         }

         /**开始进度条动画
         */
         function startPressBar() {
             document.getElementById('preview').style.display = "";
         }

         /**停止进度条动画
         */
         function stopPressBar() {
             document.getElementById('preview').style.display = "none";
         }  
    </script>
</head>
<body onload="init();">
    <div id="preview" style="display: none; text-align: center; padding-top: 250px; font-weight: bold">
        <img src="../../img/laeflet/39-1.gif" alt='' /><br />
        <br />
        <span>正在添加，请稍候</span>
    </div>
    <div class="ToolLib" >
        <input type="button" class="ButtonLib" value="矢量要素添加"  onclick="addPoint()" />
    </div>
    <div id="leaf_map" style="width: 100%; height:95%;position: absolute;">
    </div>
</body>
</html>
