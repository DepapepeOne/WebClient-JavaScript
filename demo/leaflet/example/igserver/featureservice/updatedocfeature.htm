<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>地图文档要素更新</title>
    <link href="../../css/leaflet/style.css" rel="stylesheet" type="text/css" />
    <script include="jquery" src="../../libs/zondyclient/include-lib-local.js"></script>
    <script src="../../libs/zondyclient/include-leaflet-local.js"></script>
    <style>
        body {
            height: 700px;
        }
    </style>
    <script type="text/javascript">
           //使用严格模式
           "use strict";
           //定义地图文档图层和地图
           var mapDocLayer, map;
           //子图位置信息和子图号
           var pnt, symbolId;
           //select标签中选择的要素id
           var featureSelect;
           //要素位置
           var pntArr = new Array();
           //要素符号
           var symbolArr = new Array();
           //地图文档guid
           var guid;
           /**初始化地图显示,加载地图文档图层
           */
           function init() {
               //随机生成一个guid
               guid = Math.floor(Math.random() * 10000000).toString(); 
               //地图容器
               map = L.map('leaf_map', {
                   //地图渲染在canvas上
                   preferCanvas: true,
                   //不添加属性说明控件
                   attributionControl: false,
                   //添加缩放控件
                   zoomControl: true,
                   //投影坐标系
                   crs: L.CRS.EPSG4326,
                   //中心点
                   center: [0, 0],
                   //最大级数
                   maxZoom: 10,
                   //最小级数
                   minZoom: 0,
                   //显示级数
                   zoom: 1
               });
               //创建地图文档图层
               mapDocLayer = new Zondy.Map.MapDocLayer("WorldJWEdit", {
                   //IP地址
                   ip: "develop.smaryun.com",
                   //端口号
                   port: "6163",
                   //只显示一个图层,不平铺显示
                   noWrap: true,
                   //添加guid
                   guid: guid
               }).addTo(map);
               //获取所有要素列表
               initFeatureIds();
           }

           /**执行点更新功能
           */
           function updatePoint() {
               //获取当前选择的要素编号
               var featureIds = $("#featureID").find("option:selected").text();
               if (featureIds == "请选择要素") {
                   alert("请先选择要素，再进行更新!");
                   return;
               }
               //显示进度条
               startPressBar();
               if (pnt != null) {
                   if (pnt[0] != null && pnt[1] != null) {
                       //创建一个点形状，描述点形状的几何信息
                       var gpoint = new Zondy.Object.GPoint(pnt[0], pnt[1]);
                       var fGeom = new Zondy.Object.FeatureGeometry({ PntGeom: [gpoint] });
                       //如果没有获取到子图符号，则直接返回
                       if (symbolId == null) {
                           alert("没有获取到待修改元素的子图符号！");
                           return;
                       }
                       //设置子图符号
                       var symID = symbolId + 1;
                       //设置添加点要素的图形参数信息
                       var pointInfo = new Zondy.Object.CPointInfo({ Angle: 0, Color: 1442, Space: 0, SymHeight: 12, SymID: symID, SymWidth: 12 });
                       //设置当前点要素的图形参数信息
                       var webGraphicInfo = new Zondy.Object.WebGraphicsInfo({ InfoType: 1, PntInfo: pointInfo });
                       //设置添加点要素的属性信息
                       var attValue = ['东京', '日本', 1.0];
                       //创建一个点要素
                       var newFeature = new Zondy.Object.Feature({ fGeom: fGeom, GraphicInfo: webGraphicInfo, AttValue: attValue });
                       //设置要素为点要素
                       newFeature.setFType(1);
                       //设置更新要素的FID
                       newFeature.setFID(featureIds);
                       //创建一个点要素数据集
                       var featureSet = new Zondy.Object.FeatureSet();
                       featureSet.clear();
                       //设置属性结构
                       var cAttStruct = new Zondy.Object.CAttStruct({ FldName: ["Cname", "CNTRY_NAME", "POPULATION"], FldNumber: 3, FldType: ["string", "string", "double"] });
                       featureSet.AttStruct = cAttStruct;
                       //添加要素到要素数据集
                       featureSet.addFeature(newFeature);
                       //创建一个编辑服务类
                       var editService = new Zondy.Service.EditDocFeature("WorldJWEdit", 11, { ip: "develop.smaryun.com", port: "6163" });
                       //更新所选要素，UpdateDocSuccess为回调函数
                       editService.update(featureSet, UpdateDocSuccess);
                   }
               }
           }

           /**修改点要素回调函数
           *  @param {json对象} rlt 获取结果对象
           */
           function UpdateDocSuccess(rlt) {
               //停止进度条
               stopPressBar();
               var result = rlt;
               if (result) {
                   //刷新图层前要进行此设置。加载之前的缓存文档,保证专题图能正常显示
                   mapDocLayer.options.keepCache = false;
                   //刷新图层，实时显示专题图
                   mapDocLayer.redraw();
                   //设置为读取缓存，以加快显示效率
                   mapDocLayer.options.keepCache = true;
                   alert("修改点要素成功！");
               } 
               else {
                   alert("修改点要素失败！");
               }
           }

           /**查询地图，获取活动图层中所有要素列表
           *  @param {int类型} maxIndex Select标签最大索引值
           */
           function initFeatureIds(maxIndex) {
               //获取所选要素
               featureSelect = $("#featureID");
               $("<option value='请选择要素'>请选择要素</option>").appendTo(featureSelect);
               if (maxIndex != null && maxIndex == 1) {
                   return;
               }
               //初始化查询结构对象，设置查询结构包含几何信息
               var queryStruct = new Zondy.Service.QueryFeatureStruct();
               //是否包含几何图形信息
               queryStruct.IncludeGeometry = true;
               //是否包含属性信息
               queryStruct.IncludeAttribute = true;
               //是否包含图形显示参数
               queryStruct.IncludeWebGraphic = true;
               //实例化查询参数对象
               var queryParam = new Zondy.Service.QueryParameter({
                   resultFormat: "json",
                   struct: queryStruct
               });
               //设置查询要素数目
               queryParam.recordNumber = 1000;
               //实例化地图文档查询服务对象
               var queryService = new Zondy.Service.QueryDocFeature(queryParam, "WorldJWEdit", 11, {
                   ip: "develop.smaryun.com",
                   port: "6163"
               });
               //执行查询操作，querySuccess为查询回调函数
               queryService.query(querySuccess);
           }

           /**查询成功回调函数
           *  @param {json对象} a 获取结果对象
           */
           function querySuccess(a) {
               if (a.SFEleArray != null) {
                   if (a.SFEleArray.length == 0) {
                       alert("查询结果为空");
                   }
                   else {
                       for (var i = 0; i < a.SFEleArray.length; i++) {
                           var obj = a.SFEleArray[i];
                           $("<option value='" + i + "'>" + obj.FID + "</option>").appendTo(featureSelect);
                           //获取不同编号对应元素的外包络矩形及中心，用于跳转
                           var featureBound = obj.bound;
                           var x = 0, y = 0;
                           //计算外包矩形的中心点
                           x = featureBound.xmax != featureBound.xmin ? ((featureBound.xmax - featureBound.xmin) / 2 + featureBound.xmin) : featureBound.xmax;
                           y = featureBound.ymax != featureBound.ymin ? ((featureBound.ymax - featureBound.ymin) / 2 + featureBound.ymin) : featureBound.ymax;
                           pntArr.push([x, y]);
                           //获取子图符号
                           var webGraphic = obj.GraphicInfo;
                           if (webGraphic != null) {
                               if (webGraphic.PntInfo != null && webGraphic.PntInfo.SymID != null) {
                                   symbolArr.push(webGraphic.PntInfo.SymID);
                               }
                           }

                       }
                   }
               }  
               else {
                   alert("当前地图未查到要素，请先运行对应的要素添加示例！");
               } 
           }

           /**选中某一个要素编号后触发的事件，用于进行要素定位，地图跳转
           */
           function onSelect() {
               var index = $("#featureID").val();
               if (index == "请选择要素") {
                   return;
               }
               //获取坐标
               pnt = pntArr[index];
               //获取子图符号
               symbolId = symbolArr[index];
               //每修改一次子图符号，更新一下子图符号的缓存数组
               //这里出于执行效率问题，不采用更新一次符号库就重新查询子图符号信息的做法，而是直接变更缓存数组的值
               symbolArr[index] = symbolId + 1;
               //注意leaflet是用纬经度来表示位置
               var coordinate = [pnt[1], pnt[0]];
               //将视图跳转到所选点要素的位置，并设置显示级数
               map.setView(coordinate, 3);
           }

           /**开始进度条动画
           */
           function startPressBar() {
               document.getElementById('preview').style.display = "";
           }

           /**停止进度条动画
           */
           function stopPressBar() {
               document.getElementById('preview').style.display = "none";
           }  
    </script>
</head>
<body onload="init()">
    <div id="preview" style="display: none; text-align: center; padding-top: 250px; font-weight: bold">
        <img src="../../img/common/39-1.gif" alt='' /><br />
        <br />
        <span>正在更新，请稍候</span>
    </div>
    <div class="ToolLib">
        请输入要更新的要素ID：<select id="featureID" onchange="onSelect()"></select>
        <input type="button" class="ButtonLib" value="更新" onclick="updatePoint()" />
    </div>
    <div id="leaf_map" style="width: 100%; height:95%;position: absolute;">
    </div>
</body>
</html>
