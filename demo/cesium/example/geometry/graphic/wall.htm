<!DOCTYPE html>
<html>

<head>
    <meta charset='utf-8' />
    <title>Along</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script  include="jquery" src="../../libs/zondyclient/include-lib-local.js"></script>
    <script  src="../../libs/zondyclient/include-cesium-local.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>

<body>
    <div id='map'></div>
    <script>
        var viewer = new Cesium.Viewer('map');

        initMap();

        function initMap() {
            /*
             * 懒人加载模式，这适用于小数据，快速展示，后面的问题多多，最好使用下面的新的模式
             */
            var redWall = viewer.entities.add({
                name: 'Red wall at height',
                wall: {
                    positions: Cesium.Cartesian3.fromDegreesArrayHeights([-115.0, 44.0, 200000.0, -90.0, 44.0,
                        200000.0
                    ]),
                    minimumHeights: [100000.0, 100000.0],
                    material: Cesium.Color.RED
                }
            });

            var greenWall = viewer.entities.add({
                name: 'Green wall from surface with outline',
                wall: {
                    positions: Cesium.Cartesian3.fromDegreesArrayHeights([-107.0, 43.0, 100000.0, -97.0, 43.0,
                        100000.0, -97.0, 40.0, 100000.0, -107.0, 40.0, 100000.0, -107.0, 43.0, 100000.0
                    ]),
                    material: Cesium.Color.GREEN,
                    outline: true
                }
            });

            var blueWall = viewer.entities.add({
                name: 'Blue wall with sawtooth heights and outline',
                wall: {
                    positions: Cesium.Cartesian3.fromDegreesArray([-115.0, 50.0, -112.5, 50.0, -110.0, 50.0, -
                        107.5, 50.0, -105.0, 50.0, -102.5, 50.0, -100.0, 50.0, -97.5, 50.0, -95.0, 50.0, -
                        92.5, 50.0, -90.0, 50.0
                    ]),
                    maximumHeights: [100000, 200000, 100000, 200000, 100000, 200000, 100000, 200000, 100000,
                        200000, 100000
                    ],
                    minimumHeights: [0, 100000, 0, 100000, 0, 100000, 0, 100000, 0, 100000, 0],
                    material: Cesium.Color.BLUE.withAlpha(0.5),
                    outline: true,
                    outlineColor: Cesium.Color.BLACK
                }
            });
            viewer.zoomTo(viewer.entities);

            /*
             * 新加载模式-几何图元，这适用于复杂的定制化场景，核心由三部分组成，几何实例与模型矩阵以及样式
             */
            var wallinstance = new Cesium.GeometryInstance({
                geometry: new Cesium.WallGeometry({
                    positions: Cesium.Cartesian3.fromDegreesArray([-125.0, 40.0, -122.5, 40.0, -120.0, 40.0, -
                        117.5, 40.0, -115.0, 40.0, -112.5, 40.0, -110.0, 40.0, -107.5, 40.0, -105.0, 40.0, -
                        102.5, 40.0, -100.0, 40.0
                    ]),
                    maximumHeights: [100000, 200000, 100000, 200000, 100000, 200000, 100000, 200000, 100000,
                        200000, 100000
                    ],
                    minimumHeights: [0, 100000, 0, 100000, 0, 100000, 0, 100000, 0, 100000, 0]
                }),
                vertexFormat: Cesium.PolylineMaterialAppearance.VERTEX_FORMAT,
                id: "wallinstance"
            });

            viewer.scene.primitives.add(new Cesium.Primitive({
                geometryInstances: [wallinstance],
                appearance: new Cesium.PolylineMaterialAppearance({
                    material: Cesium.Material.fromType('Grid',{
                        color: Cesium.Color.WHITE
                    })
                }) //PolylineColorAppearance/PolylineMaterialAppearance请区分使用场景
            }));
        }

        function initPickEvent() {
            var handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);
            handler.setInputAction(function (movement) {
                var pick = viewer.scene.pick(movement.position);
                if (Cesium.defined(pick) && (pick.id === 'wallinstance')) {
                    console.log('Mouse clicked instance.');
                }
            }, Cesium.ScreenSpaceEventType.LEFT_CLICK);
        }
    </script>

</body>

</html>