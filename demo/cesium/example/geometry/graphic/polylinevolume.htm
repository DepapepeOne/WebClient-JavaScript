<!DOCTYPE html>
<html>

<head>
    <meta charset='utf-8' />
    <title>Along</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script  include="jquery" src="../../libs/zondyclient/include-lib-local.js"></script>
    <script  src="../../libs/zondyclient/include-cesium-local.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>

<body>
    <div id='map'></div>
    <script>
        var viewer = new Cesium.Viewer('map');

        initMap();
        initPickEvent();

        function initMap() {
            /*
            * 懒人加载模式，这适用于小数据，快速展示，后面的问题多多，最好使用下面的新的模式
            */
            function computeCircle(radius) {
                var positions = [];
                for (var i = 0; i < 360; i++) {
                    var radians = Cesium.Math.toRadians(i);
                    positions.push(new Cesium.Cartesian2(radius * Math.cos(radians), radius * Math.sin(radians)));
                }
                return positions;
            }

            function computeStar(arms, rOuter, rInner) {
                var angle = Math.PI / arms;
                var length = 2 * arms;
                var positions = new Array(length);
                for (var i = 0; i < length; i++) {
                    var r = (i % 2) === 0 ? rOuter : rInner;
                    positions[i] = new Cesium.Cartesian2(Math.cos(i * angle) * r, Math.sin(i * angle) * r);
                }
                return positions;
            }

            var redTube = viewer.entities.add({
                name: 'Red tube with rounded corners',
                polylineVolume: {
                    positions: Cesium.Cartesian3.fromDegreesArray([-85.0, 32.0, -85.0, 36.0, -89.0, 36.0]),
                    shape: computeCircle(60000.0),
                    material: Cesium.Color.RED
                }
            });

            var greenBox = viewer.entities.add({
                name: 'Green box with beveled corners and outline',
                polylineVolume: {
                    positions: Cesium.Cartesian3.fromDegreesArrayHeights([-90.0, 32.0, 0.0, -90.0, 36.0,
                        100000.0, -94.0, 36.0, 0.0
                    ]),
                    shape: [new Cesium.Cartesian2(-50000, -50000),
                        new Cesium.Cartesian2(50000, -50000),
                        new Cesium.Cartesian2(50000, 50000),
                        new Cesium.Cartesian2(-50000, 50000)
                    ],
                    cornerType: Cesium.CornerType.BEVELED,
                    material: Cesium.Color.GREEN.withAlpha(0.5),
                    outline: true,
                    outlineColor: Cesium.Color.BLACK
                }
            });

            var blueStar = viewer.entities.add({
                name: 'Blue star with mitered corners and outline',
                polylineVolume: {
                    positions: Cesium.Cartesian3.fromDegreesArrayHeights([-95.0, 32.0, 0.0, -95.0, 36.0,
                        100000.0, -99.0, 36.0, 200000.0
                    ]),
                    shape: computeStar(7, 70000, 50000),
                    cornerType: Cesium.CornerType.MITERED,
                    material: Cesium.Color.BLUE
                }
            });

            viewer.zoomTo(viewer.entities);

            /*
             * 新加载模式-几何图元，这适用于复杂的定制化场景，核心由三部分组成，几何实例与模型矩阵以及样式
             */
            var polylinevolumeinstance = new Cesium.GeometryInstance({
                geometry: new Cesium.PolylineVolumeGeometry({
                    polylinePositions : Cesium.Cartesian3.fromDegreesArrayHeights([
                        -75, 55, 50000, 
                        -125, 55, 50000
                    ]),
                    shapePositions :computeStar(7, 70000, 50000),
                    cornerType: Cesium.CornerType.MITERED
                }),
                vertexFormat : Cesium.PolylineMaterialAppearance.VERTEX_FORMAT,
/*                 attributes: {
                    color: new Cesium.ColorGeometryInstanceAttribute(1.0, 1.0, 1.0, 1.0)
                }, */
                id: "polylinevolumeinstance"
            });

            viewer.scene.primitives.add(new Cesium.Primitive({
                geometryInstances: [polylinevolumeinstance],
                appearance: new Cesium.PolylineMaterialAppearance({
                    material: Cesium.Material.fromType('Color',{
                        color: Cesium.Color.YELLOW
                    })
                }) //PolylineColorAppearance/PolylineMaterialAppearance请区分使用场景
            }));
        }

        function initPickEvent() {
            var handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);
            handler.setInputAction(function (movement) {
                var pick = viewer.scene.pick(movement.position);
                if (Cesium.defined(pick) && (pick.id === 'polylinevolumeinstance')) {
                    console.log('Mouse clicked instance.');
                }
            }, Cesium.ScreenSpaceEventType.LEFT_CLICK);
        }
    </script>

</body>

</html>