<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>中地封装接口-ELS聚类</title>
  <script  include="jquery,geohash,geojson,moment" src="../../libs/zondyclient/include-lib-local.js"></script>
  <script  include="datastore" src="../../libs/zondyclient/include-cesium-local.js"></script>
  <style>
    #map {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
    }
  </style>
</head>

<body>
  <div id="mapid"></div>
  <script>
    var mapExtent, mapLevel, startTime, geojson;
    startTime = currentTime = Date.parse(new Date("2018-01-24 08:00:00")); //1516723200000; 毫秒
    
    var viewer = new Cesium.Viewer('map');
    
    var queryOptions= getQueryOptions(), layerOptions = getLayerOptions();


    //--------------------------------------------------------------------
    //-----------------下面是实际核心代码，以前都是各种样式------------------
    //--------------------------------------------------------------------
    function testGeoHash() {
      mapExtent = map.getBounds();
      mapLevel = map.getZoom();
      currentTime = currentTime + timeSpeed;
      mapLevel = (mapLevel % 20) * 12 / 20 - 1;
      info.update(currentTime);
      loadData(mapLevel, mapExtent, currentTime, currentTime + timeSpeed);
    };

    function loadData(level, extent, startTimeStamp, endTimeStamp) {
      var bound = wrapLatLngBounds(extent);
      var prec = level;//这里的prec的最大级别是12

      queryOptions.space.percision = prec;
      queryOptions.space.west = bound.getWest();
      queryOptions.space.east = bound.getEast();
      queryOptions.space.north = bound.getNorth();
      queryOptions.space.south = bound.getSouth();

      queryOptions.time.starttime = startTimeStamp;
      queryOptions.time.endtime = endTimeStamp;

      var layer = Cesium.Zondy.ElasticSearch.GeoHashService("192.168.94.128", "9091", map, queryOptions, layerOptions);
    };

    function getQueryOptions(){
        return {
            db: "df_history",
            table: "2018-01-24",
            space:{
              field:"geo",
              percision:5,
              west:-180,
              esat:180,
              north:90,
              south:-90
            },
            time:{
              field:"dataTime",
              starttime:"00000",
              endtime:"10000"
            }
        }
    }

    function getLayerOptions() {
      return {
        fillStyle: 'rgba(55, 50, 250, 0.8)',
        shadowColor: 'rgba(255, 250, 50, 1)',
        shadowBlur: 10,
        size: 40,
        globalAlpha: 0.5,
        label: {
          show: true,
          fillStyle: 'white',
          shadowColor: 'yellow',
          font: '15px Arial',
          shadowBlur: 10
        },
        gradient: {
          0: "rgba(49, 54, 149, 0)",
          0.2: "rgba(69,117,180, 0.7)",
          0.3: "rgba(116,173,209, 0.7)",
          0.4: "rgba(171,217,233, 0.7)",
          0.5: "rgba(224,243,248, 0.7)",
          0.6: "rgba(254,224,144,0.7)",
          0.7: "rgba(253,174,97,0.7)",
          0.8: "rgba(244,109,67,0.8)",
          0.9: "rgba(215,48,39,0.8)",
          0.95: "rgba(165, 0, 38,0.8)"
        },
        draw: 'grid'//honeycomb,grid,
      }
    }

    function wrapLatLngBounds(extent) {
      var left = extent.getNorthWest().lng < -180 ? -180 : extent.getNorthWest().lng;
      var bottom = extent.getSouthEast().lat < -90 ? -90 : extent.getSouthEast().lat;
      var right = extent.getSouthEast().lng > 180 ? 180 : extent.getSouthEast().lng;
      var top = extent.getNorthWest().lat > 90 ? 90 : extent.getNorthWest().lat;
      return L.latLngBounds(L.latLng(bottom, left), L.latLng(top, right));
    }
  </script>
</body>

</html>
