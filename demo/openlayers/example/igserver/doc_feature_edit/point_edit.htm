<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>edit_point</title>
    <meta charset="UTF-8">
    <link href="../../css/openlayers/style.css" rel="stylesheet" type="text/css" />
    <script include="jquery" src="../../libs/zondyclient/include-lib-local.js"></script>
    <script  src="../../libs/zondyclient/include-openlayers-local.js"></script>
    <script type="text/javascript">
        var map;
        var serverArr = [
            {
                ip: "localhost",
                docName: "feature_edit",
                center: [114.48970539557598, 22.563149652172044],
                zoom: 12
            },
            {
                ip: "develop.smaryun.com",
                docName: "WorldJWEdit",
                center: [110, 40],
                zoom: 5
            }
        ]
        var config = serverArr[0];
        var ip = config.ip;
        var center = config.center;
        var zoom = config.zoom;
        var docName = config.docName;
        var docLayer;
        var drawLayer;
        var addedPointFID;
        var editService;

        //地图初始化函数
        function init() {
            //初始化地图容器
            map = new ol.Map({
                target: "mapCon",
                view: new ol.View({
                    center: center,
                    zoom: zoom,
                    projection: "EPSG:4326"
                })
            });
            //初始化地图文档图层对象
            docLayer = new Zondy.Map.MapDocTileLayer("MapGIS IGS VectorMapdocLayer", docName, {
                ip: ip,
                port: "6163",
                isBaseLayer: true
            });
            //将地图文档图层加载到地图中
            map.addLayer(docLayer);

        }

        //随机函数生成点
        function createPoint() {
            //获取地图显示范围
            var curMapBound = map.getView().projection_.extent_;
            var w = curMapBound[2] - curMapBound[0];
            var h = curMapBound[3] - curMapBound[1];
            var x = Math.random() * w + curMapBound[0];
            var y = Math.random() * h + curMapBound[1];
            return new Zondy.Object.GPoint(x, y);
        }

        //添加点要素
        function addPoint() {
            //创建一个点形状，描述点形状的几何信息
            var gpoint = new Zondy.Object.GPoint(center[0], center[1]);//createPoint();
            //设置当前点要素的几何信息
            var fGeom = new Zondy.Object.FeatureGeometry({PntGeom: [gpoint]});
            //随机输出1~8之间的整数,作为新添加的要素的颜色号
            var pntColor = Math.floor(Math.random() * 8 + 1);
            //描述点要素的符号参数信息
            var pointInfo = new Zondy.Object.CPointInfo({
                Angle: 0,
                Color: pntColor,
                Space: 0,
                SymHeight: 0.01,
                SymID: 114,
                SymWidth: 0.01
            });
            //设置当前点要素的图形参数信息
            var webGraphicInfo = new Zondy.Object.WebGraphicsInfo({InfoType: 1, PntInfo: pointInfo});
            //设置添加点要素的属性信息
//            var attValue = ['中国', '中国', 1.0];
            var attValue = ['韩国', '韩国', 2.0];
            //创建一个要素
            var feature = new Zondy.Object.Feature({fGeom: fGeom, GraphicInfo: webGraphicInfo, AttValue: attValue});
            //设置要素为点要素
            feature.setFType(1);
            //创建一个要素数据集
            var featureSet = new Zondy.Object.FeatureSet();
            featureSet.clear();
            //设置属性结构
            var cAttStruct = new Zondy.Object.CAttStruct({
                FldName: ["Cname", "CNTRY_NAME", "POPULATION"],
                FldNumber: 3,
                FldType: ["string", "string", "double"]
            });
            featureSet.AttStruct = cAttStruct;
            //添加要素到要素数据集
            featureSet.addFeature(feature);

            //创建一个编辑服务类
            editService = new Zondy.Service.EditDocFeature(docName, 1, {ip: ip, port: "6163"});
            //执行添加点要素功能
            editService.add(featureSet, onPntSuccess);
        }

        function deletePoint() {
            editService.deletes(addedPointFID, null);
            docLayer.refresh();
        }

        function updatePoint() {
            var gpoint = new Zondy.Object.GPoint(center[0], center[1]);
            var fGeom = new Zondy.Object.FeatureGeometry({PntGeom: [gpoint]});

            //设置添加点要素的图形参数信息
            var pointInfo = new Zondy.Object.CPointInfo({
                Angle: 0,
                Color: 1442,
                Space: 0,
                SymHeight: 0.01,
                SymID: 115,
                SymWidth: 0.01
            });
            //设置当前点要素的图形参数信息
            var webGraphicInfo = new Zondy.Object.WebGraphicsInfo({InfoType: 1, PntInfo: pointInfo});

            //设置添加点要素的属性信息
            var attValue = ['东京', '日本', 1.0];


            //创建一个点要素
            var newFeature = new Zondy.Object.Feature({fGeom: fGeom, GraphicInfo: webGraphicInfo, AttValue: attValue});
            //设置要素为点要素
            newFeature.setFType(1);
            newFeature.setFID(addedPointFID);

            //创建一个点要素数据集
            var featureSet = new Zondy.Object.FeatureSet();
            featureSet.clear();
            //设置属性结构
            var cAttStruct = new Zondy.Object.CAttStruct({
                FldName: ["Cname", "CNTRY_NAME", "POPULATION"],
                FldNumber: 3,
                FldType: ["string", "string", "double"]
            });
            featureSet.AttStruct = cAttStruct;
            //添加要素到要素数据集
            featureSet.addFeature(newFeature);

            //创建一个编辑服务类
            var editService = new Zondy.Service.EditDocFeature(docName, 1, {
                ip: ip,
                port: "6163"
            });
            editService.update(featureSet, onPointUpdateSuccess);
        }


        function onPointUpdateSuccess(data){
            docLayer.refresh();
            console.log(data);
        }

        //添加点要素回调函数
        function onPntSuccess(data) {
            if (data.result.succeed) {
                console.log("添加点要素成功！");
                docLayer.refresh();
                queryByAttribute();

            } else {
                alert("添加点要素失败！");
            }
        }

        function queryByAttribute() {
            clearA();
            //显示进度条
            startPressBar();
            //初始化查询结构对象，设置查询结构包含几何信息
            var queryStruct = new Zondy.Service.QueryFeatureStruct();
            //是否包含几何图形信息
            queryStruct.IncludeGeometry = true;
            //是否包含属性信息
            queryStruct.IncludeAttribute = true;
            //是否包含图形显示参数
            queryStruct.IncludeWebGraphic = false;
            //实例化查询参数对象
            var queryParam = new Zondy.Service.QueryParameter({
                resultFormat: "json",
                struct: queryStruct
            });
            //设置查询分页号
            queryParam.pageIndex = 0;
            //设置查询要素数目
            queryParam.recordNumber = 20;
            //设置属性条件
            var condition = $("#Conditions").val();
//            queryParam.where = condition;
//            queryParam.where = "1>0";
            //实例化地图文档查询服务对象
            var queryService = new Zondy.Service.QueryDocFeature(queryParam, docName, 1, {
                ip: ip,
                port: "6163"
            });
            //执行查询操作，querySuccess为查询回调函数
            queryService.query(querySuccess, queryError);
        }

        //查询失败回调
        function queryError(e) {
            //停止进度条
            stopPressBar();
        }

        //查询成功回调
        function querySuccess(result) {
            //停止进度条
            stopPressBar();
            //初始化Zondy.Format.PolygonJSON类
            var format = new Zondy.Format.PolygonJSON();
            //将MapGIS要素JSON反序列化为ol.Feature类型数组
            var features = format.read(result);

//            addedPointFID = features[0].id_;
            addedPointFID = result.SFEleArray[0].FID;

            //实例化一个矢量图层drawLayerr用于高亮显示结果
            var drawSource = new ol.source.Vector({
                wrapX: false
            });
            drawSource.addFeatures(features);
            drawLayer = new ol.layer.Vector({
                source: drawSource,
                style: new ol.style.Style({
                    //填充色
                    fill: new ol.style.Fill({
                        color: 'rgba(255, 0, 0, 0.5)'
                    }),
                    //边线样式
                    stroke: new ol.style.Stroke({
                        color: 'rgba(255,204, 51, 1)',
                        width: 1
                    })
                })
            });

            map.addLayer(drawLayer);
            map.setView(new ol.View({
                center: center,
                zoom: zoom,
                projection: 'EPSG:4326'
            }));
        }

        //清除客户端查询结果信息
        function clearA() {
            //停止进度条
            stopPressBar();
            if (drawLayer) {
                //移除高亮显示结果图层drawLayerr
                map.removeLayer(drawLayer);
            }
            else
                return;
        }

        //停止进度条
        function stopPressBar() {
            document.getElementById('preview').style.display = "none";
        }

        //开始进度条动画
        function startPressBar() {
            document.getElementById('preview').style.display = "";
        }
    </script>
</head>
<body onload="init();">
<div id="preview" style="display: none; text-align: center; padding-top: 250px; font-weight: bold">
    <img src="../../img/common/39-1.gif" alt=''/><br/>
    <br/>
    <span>正在查询，请稍候</span>
</div>
<div class="ToolLib">
    <input type="button" class="ButtonLib" value="添加点要素" onclick="addPoint()"/>
    <input type="button" class="ButtonLib" value="编辑点要素" onclick="updatePoint()"/>
    <input type="button" class="ButtonLib" value="删除点要素" onclick="deletePoint()"/>
</div>
<div id="mapCon">
</div>
</body>
</html>
